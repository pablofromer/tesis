2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [INFO] Decomposition: MONOLITIC
2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [INFO] Rewriting Language: UCQ
2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [INFO] Atom Coverage Strategy: TRANSITIVE
2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [INFO] Subsumption Check Strategy: NONE
2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [INFO] Negative Constraints Check Strategy NONE
2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [INFO] Created output directory: U
2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing file: U
2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [INFO] Expressivity: [LINEAR, STICKY, GUARDED]
2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [DEBUG] Computing propagation graph.
2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [DEBUG] Propagation Graph:
(degreeFrom[1],degreeFrom[1]) -> {
	([],[])
}
(degreeFrom[2],degreeFrom[2]) -> {
	([],[])
}
(doctoralDegreeFrom[1],doctoralDegreeFrom[1]) -> {
	([],[])
}
(doctoralDegreeFrom[2],doctoralDegreeFrom[2]) -> {
	([],[])
}
(doctoralDegreeFrom[2],degreeFrom[2]) -> {
	([doctoralDegreeFrom[2], degreeFrom[2]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y).])
}
(doctoralDegreeFrom[1],degreeFrom[1]) -> {
	([doctoralDegreeFrom[1], degreeFrom[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y).])
}
(Faculty[1],Faculty[1]) -> {
	([],[])
}
(isPartOfUniversity[1],isPartOfUniversity[1]) -> {
	([],[])
}
(isPartOfUniversity[2],isPartOfUniversity[2]) -> {
	([],[])
}
(isPartOfUniversity[1],Faculty[1]) -> {
	([isPartOfUniversity[1], Faculty[1]],[Faculty(?X) :- isPartOfUniversity(?X, ?Y).])
}
(Professor[1],Professor[1]) -> {
	([],[])
}
(Dean[1],Dean[1]) -> {
	([],[])
}
(Dean[1],Professor[1]) -> {
	([Dean[1], Professor[1]],[Professor(?X) :- Dean(?X).])
}
(University[1],University[1]) -> {
	([],[])
}
(undergraduateDegreeFrom[1],undergraduateDegreeFrom[1]) -> {
	([],[])
}
(undergraduateDegreeFrom[2],undergraduateDegreeFrom[2]) -> {
	([],[])
}
(undergraduateDegreeFrom[2],University[1]) -> {
	([undergraduateDegreeFrom[2], University[1]],[University(?Y) :- undergraduateDegreeFrom(?X, ?Y).])
}
(Organization[1],Organization[1]) -> {
	([],[])
}
(University[1],Organization[1]) -> {
	([University[1], Organization[1]],[Organization(?X) :- University(?X).])
}
(hasFaculty[1],hasFaculty[1]) -> {
	([],[])
}
(hasFaculty[2],hasFaculty[2]) -> {
	([],[])
}
(isPartOfUniversity[1],hasFaculty[2]) -> {
	([isPartOfUniversity[1], hasFaculty[2]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X).])
}
(isPartOfUniversity[2],hasFaculty[1]) -> {
	([isPartOfUniversity[2], hasFaculty[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X).])
}
(hasFaculty[2],isPartOfUniversity[1]) -> {
	([hasFaculty[2], isPartOfUniversity[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y).])
}
(hasFaculty[1],isPartOfUniversity[2]) -> {
	([hasFaculty[1], isPartOfUniversity[2]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y).])
}
(Person[1],Person[1]) -> {
	([],[])
}
(Employee[1],Employee[1]) -> {
	([],[])
}
(Employee[1],Person[1]) -> {
	([Employee[1], Person[1]],[Person(?X) :- Employee(?X).])
}
(FullProfessor[1],FullProfessor[1]) -> {
	([],[])
}
(FullProfessor[1],Professor[1]) -> {
	([FullProfessor[1], Professor[1]],[Professor(?X) :- FullProfessor(?X).])
}
(Program[1],Program[1]) -> {
	([],[])
}
(Program[1],Organization[1]) -> {
	([Program[1], Organization[1]],[Organization(?X) :- Program(?X).])
}
(publicationAuthor[1],publicationAuthor[1]) -> {
	([],[])
}
(publicationAuthor[2],publicationAuthor[2]) -> {
	([],[])
}
(publicationAuthor[2],Person[1]) -> {
	([publicationAuthor[2], Person[1]],[Person(?Y) :- publicationAuthor(?X, ?Y).])
}
(FacultyStaff[1],FacultyStaff[1]) -> {
	([],[])
}
(Professor[1],FacultyStaff[1]) -> {
	([Professor[1], FacultyStaff[1]],[FacultyStaff(?X) :- Professor(?X).])
}
(isPartOfUniversity[2],University[1]) -> {
	([isPartOfUniversity[2], University[1]],[University(?Y) :- isPartOfUniversity(?X, ?Y).])
}
(PostDoc[1],PostDoc[1]) -> {
	([],[])
}
(PostDoc[1],FacultyStaff[1]) -> {
	([PostDoc[1], FacultyStaff[1]],[FacultyStaff(?X) :- PostDoc(?X).])
}
(AssociateProfessor[1],AssociateProfessor[1]) -> {
	([],[])
}
(AssociateProfessor[1],Professor[1]) -> {
	([AssociateProfessor[1], Professor[1]],[Professor(?X) :- AssociateProfessor(?X).])
}
(affiliatedOrganizationOf[1],affiliatedOrganizationOf[1]) -> {
	([],[])
}
(affiliatedOrganizationOf[2],affiliatedOrganizationOf[2]) -> {
	([],[])
}
(affiliatedOrganizationOf[2],Organization[1]) -> {
	([affiliatedOrganizationOf[2], Organization[1]],[Organization(?Y) :- affiliatedOrganizationOf(?X, ?Y).])
}
(member[1],member[1]) -> {
	([],[])
}
(member[2],member[2]) -> {
	([],[])
}
(member[2],Person[1]) -> {
	([member[2], Person[1]],[Person(?Y) :- member(?X, ?Y).])
}
(memberOf[1],memberOf[1]) -> {
	([],[])
}
(memberOf[2],memberOf[2]) -> {
	([],[])
}
(worksFor[1],worksFor[1]) -> {
	([],[])
}
(worksFor[2],worksFor[2]) -> {
	([],[])
}
(worksFor[2],memberOf[2]) -> {
	([worksFor[2], memberOf[2]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
}
(worksFor[1],memberOf[1]) -> {
	([worksFor[1], memberOf[1]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
}
(AdministrativeStaff[1],AdministrativeStaff[1]) -> {
	([],[])
}
(AdministrativeStaff[1],Employee[1]) -> {
	([AdministrativeStaff[1], Employee[1]],[Employee(?X) :- AdministrativeStaff(?X).])
}
(AssistantProfessor[1],AssistantProfessor[1]) -> {
	([],[])
}
(AssistantProfessor[1],Professor[1]) -> {
	([AssistantProfessor[1], Professor[1]],[Professor(?X) :- AssistantProfessor(?X).])
}
(hasAlumnus[1],hasAlumnus[1]) -> {
	([],[])
}
(hasAlumnus[2],hasAlumnus[2]) -> {
	([],[])
}
(hasAlumnus[1],University[1]) -> {
	([hasAlumnus[1], University[1]],[University(?X) :- hasAlumnus(?X, ?Y).])
}
(Exam[1],Exam[1]) -> {
	([],[])
}
(BachelorExam[1],BachelorExam[1]) -> {
	([],[])
}
(BachelorExam[1],Exam[1]) -> {
	([BachelorExam[1], Exam[1]],[Exam(?X) :- BachelorExam(?X).])
}
(aux_0[1],aux_0[1]) -> {
	([],[])
}
(aux_0[2],aux_0[2]) -> {
	([],[])
}
(Dean[1],aux_0[1]) -> {
	([Dean[1], aux_0[1]],[aux_0(?X, ?Y) :- Dean(?X).])
}
(FacultyStaff[1],Employee[1]) -> {
	([FacultyStaff[1], Employee[1]],[Employee(?X) :- FacultyStaff(?X).])
}
(affiliateOf[1],affiliateOf[1]) -> {
	([],[])
}
(affiliateOf[2],affiliateOf[2]) -> {
	([],[])
}
(affiliateOf[2],Person[1]) -> {
	([affiliateOf[2], Person[1]],[Person(?Y) :- affiliateOf(?X, ?Y).])
}
(doctoralDegreeFrom[1],Person[1]) -> {
	([doctoralDegreeFrom[1], Person[1]],[Person(?X) :- doctoralDegreeFrom(?X, ?Y).])
}
(advisor[1],advisor[1]) -> {
	([],[])
}
(advisor[2],advisor[2]) -> {
	([],[])
}
(advisor[2],Professor[1]) -> {
	([advisor[2], Professor[1]],[Professor(?Y) :- advisor(?X, ?Y).])
}
(mastersDegreeFrom[1],mastersDegreeFrom[1]) -> {
	([],[])
}
(mastersDegreeFrom[2],mastersDegreeFrom[2]) -> {
	([],[])
}
(mastersDegreeFrom[2],degreeFrom[2]) -> {
	([mastersDegreeFrom[2], degreeFrom[2]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y).])
}
(mastersDegreeFrom[1],degreeFrom[1]) -> {
	([mastersDegreeFrom[1], degreeFrom[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y).])
}
(Work[1],Work[1]) -> {
	([],[])
}
(Course[1],Course[1]) -> {
	([],[])
}
(Course[1],Work[1]) -> {
	([Course[1], Work[1]],[Work(?X) :- Course(?X).])
}
(headOf[1],headOf[1]) -> {
	([],[])
}
(headOf[2],headOf[2]) -> {
	([],[])
}
(headOf[2],worksFor[2]) -> {
	([headOf[2], worksFor[2]],[worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(headOf[1],worksFor[1]) -> {
	([headOf[1], worksFor[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(Director[1],Director[1]) -> {
	([],[])
}
(Director[1],Person[1]) -> {
	([Director[1], Person[1]],[Person(?X) :- Director(?X).])
}
(member[1],Organization[1]) -> {
	([member[1], Organization[1]],[Organization(?X) :- member(?X, ?Y).])
}
(Lecturer[1],Lecturer[1]) -> {
	([],[])
}
(Lecturer[1],FacultyStaff[1]) -> {
	([Lecturer[1], FacultyStaff[1]],[FacultyStaff(?X) :- Lecturer(?X).])
}
(degreeFrom[2],University[1]) -> {
	([degreeFrom[2], University[1]],[University(?Y) :- degreeFrom(?X, ?Y).])
}
(tenured[1],tenured[1]) -> {
	([],[])
}
(tenured[2],tenured[2]) -> {
	([],[])
}
(tenured[1],Professor[1]) -> {
	([tenured[1], Professor[1]],[Professor(?X) :- tenured(?X, ?Y).])
}
(doctoralDegreeFrom[2],University[1]) -> {
	([doctoralDegreeFrom[2], University[1]],[University(?Y) :- doctoralDegreeFrom(?X, ?Y).])
}
(memberOf[1],member[2]) -> {
	([memberOf[1], member[2]],[member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(memberOf[2],member[1]) -> {
	([memberOf[2], member[1]],[member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(member[2],memberOf[1]) -> {
	([member[2], memberOf[1]],[memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(member[1],memberOf[2]) -> {
	([member[1], memberOf[2]],[memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(degreeFrom[1],Person[1]) -> {
	([degreeFrom[1], Person[1]],[Person(?X) :- degreeFrom(?X, ?Y).])
}
(Student[1],Student[1]) -> {
	([],[])
}
(hasExamRecord[1],hasExamRecord[1]) -> {
	([],[])
}
(hasExamRecord[2],hasExamRecord[2]) -> {
	([],[])
}
(hasExamRecord[1],Student[1]) -> {
	([hasExamRecord[1], Student[1]],[Student(?X) :- hasExamRecord(?X, ?Y).])
}
(orgPublication[1],orgPublication[1]) -> {
	([],[])
}
(orgPublication[2],orgPublication[2]) -> {
	([],[])
}
(orgPublication[1],Organization[1]) -> {
	([orgPublication[1], Organization[1]],[Organization(?X) :- orgPublication(?X, ?Y).])
}
(SystemsStaff[1],SystemsStaff[1]) -> {
	([],[])
}
(SystemsStaff[1],AdministrativeStaff[1]) -> {
	([SystemsStaff[1], AdministrativeStaff[1]],[AdministrativeStaff(?X) :- SystemsStaff(?X).])
}
(ResearchAssistant[1],ResearchAssistant[1]) -> {
	([],[])
}
(ResearchAssistant[1],Student[1]) -> {
	([ResearchAssistant[1], Student[1]],[Student(?X) :- ResearchAssistant(?X).])
}
(hasFaculty[2],Faculty[1]) -> {
	([hasFaculty[2], Faculty[1]],[Faculty(?Y) :- hasFaculty(?X, ?Y).])
}
(ExamRecord[1],ExamRecord[1]) -> {
	([],[])
}
(hasExamRecord[2],ExamRecord[1]) -> {
	([hasExamRecord[2], ExamRecord[1]],[ExamRecord(?Y) :- hasExamRecord(?X, ?Y).])
}
(Chair[1],Chair[1]) -> {
	([],[])
}
(Chair[1],Professor[1]) -> {
	([Chair[1], Professor[1]],[Professor(?X) :- Chair(?X).])
}
(undergraduateDegreeFrom[1],Person[1]) -> {
	([undergraduateDegreeFrom[1], Person[1]],[Person(?X) :- undergraduateDegreeFrom(?X, ?Y).])
}
(mastersDegreeFrom[1],Person[1]) -> {
	([mastersDegreeFrom[1], Person[1]],[Person(?X) :- mastersDegreeFrom(?X, ?Y).])
}
(affiliatedOrganizationOf[1],Organization[1]) -> {
	([affiliatedOrganizationOf[1], Organization[1]],[Organization(?X) :- affiliatedOrganizationOf(?X, ?Y).])
}
(undergraduateDegreeFrom[2],degreeFrom[2]) -> {
	([undergraduateDegreeFrom[2], degreeFrom[2]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y).])
}
(undergraduateDegreeFrom[1],degreeFrom[1]) -> {
	([undergraduateDegreeFrom[1], degreeFrom[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y).])
}
(Student[1],Person[1]) -> {
	([Student[1], Person[1]],[Person(?X) :- Student(?X).])
}
(Career[1],Career[1]) -> {
	([],[])
}
(Career[1],Work[1]) -> {
	([Career[1], Work[1]],[Work(?X) :- Career(?X).])
}
(VisitingProfessor[1],VisitingProfessor[1]) -> {
	([],[])
}
(VisitingProfessor[1],Professor[1]) -> {
	([VisitingProfessor[1], Professor[1]],[Professor(?X) :- VisitingProfessor(?X).])
}
(aux_1[1],aux_1[1]) -> {
	([],[])
}
(aux_1[2],aux_1[2]) -> {
	([],[])
}
(Director[1],aux_1[1]) -> {
	([Director[1], aux_1[1]],[aux_1(?X, ?Y) :- Director(?X).])
}
(teachingAssistantOf[1],teachingAssistantOf[1]) -> {
	([],[])
}
(teachingAssistantOf[2],teachingAssistantOf[2]) -> {
	([],[])
}
(teachingAssistantOf[2],Course[1]) -> {
	([teachingAssistantOf[2], Course[1]],[Course(?Y) :- teachingAssistantOf(?X, ?Y).])
}
(College[1],College[1]) -> {
	([],[])
}
(College[1],Organization[1]) -> {
	([College[1], Organization[1]],[Organization(?X) :- College(?X).])
}
(GraduateCourse[1],GraduateCourse[1]) -> {
	([],[])
}
(GraduateCourse[1],Course[1]) -> {
	([GraduateCourse[1], Course[1]],[Course(?X) :- GraduateCourse(?X).])
}
(hasAlumnus[1],degreeFrom[2]) -> {
	([hasAlumnus[1], degreeFrom[2]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(hasAlumnus[2],degreeFrom[1]) -> {
	([hasAlumnus[2], degreeFrom[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(degreeFrom[2],hasAlumnus[1]) -> {
	([degreeFrom[2], hasAlumnus[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(degreeFrom[1],hasAlumnus[2]) -> {
	([degreeFrom[1], hasAlumnus[2]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(aux_2[1],aux_2[1]) -> {
	([],[])
}
(aux_2[2],aux_2[2]) -> {
	([],[])
}
(Student[1],aux_2[1]) -> {
	([Student[1], aux_2[1]],[aux_2(?X, ?Y) :- Student(?X).])
}
(ExDean[1],ExDean[1]) -> {
	([],[])
}
(ExDean[1],Professor[1]) -> {
	([ExDean[1], Professor[1]],[Professor(?X) :- ExDean(?X).])
}
(affiliateOf[1],Organization[1]) -> {
	([affiliateOf[1], Organization[1]],[Organization(?X) :- affiliateOf(?X, ?Y).])
}
(ExamRecord[1],Work[1]) -> {
	([ExamRecord[1], Work[1]],[Work(?X) :- ExamRecord(?X).])
}
(aux_3[1],aux_3[1]) -> {
	([],[])
}
(aux_3[2],aux_3[2]) -> {
	([],[])
}
(Employee[1],aux_3[1]) -> {
	([Employee[1], aux_3[1]],[aux_3(?X, ?Y) :- Employee(?X).])
}
(ClericalStaff[1],ClericalStaff[1]) -> {
	([],[])
}
(ClericalStaff[1],AdministrativeStaff[1]) -> {
	([ClericalStaff[1], AdministrativeStaff[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X).])
}
(GraduateStudent[1],GraduateStudent[1]) -> {
	([],[])
}
(GraduateStudent[1],Person[1]) -> {
	([GraduateStudent[1], Person[1]],[Person(?X) :- GraduateStudent(?X).])
}
(UndergraduateStudent[1],UndergraduateStudent[1]) -> {
	([],[])
}
(UndergraduateStudent[1],Student[1]) -> {
	([UndergraduateStudent[1], Student[1]],[Student(?X) :- UndergraduateStudent(?X).])
}
(advisor[1],Person[1]) -> {
	([advisor[1], Person[1]],[Person(?X) :- advisor(?X, ?Y).])
}
(hasFaculty[1],University[1]) -> {
	([hasFaculty[1], University[1]],[University(?X) :- hasFaculty(?X, ?Y).])
}
(hasAlumnus[2],Person[1]) -> {
	([hasAlumnus[2], Person[1]],[Person(?Y) :- hasAlumnus(?X, ?Y).])
}
(Faculty[1],Organization[1]) -> {
	([Faculty[1], Organization[1]],[Organization(?X) :- Faculty(?X).])
}
(teacherOf[1],teacherOf[1]) -> {
	([],[])
}
(teacherOf[2],teacherOf[2]) -> {
	([],[])
}
(teacherOf[1],FacultyStaff[1]) -> {
	([teacherOf[1], FacultyStaff[1]],[FacultyStaff(?X) :- teacherOf(?X, ?Y).])
}
(teacherOf[2],Course[1]) -> {
	([teacherOf[2], Course[1]],[Course(?Y) :- teacherOf(?X, ?Y).])
}
(aux_4[1],aux_4[1]) -> {
	([],[])
}
(aux_4[2],aux_4[2]) -> {
	([],[])
}
(GraduateStudent[1],aux_4[1]) -> {
	([GraduateStudent[1], aux_4[1]],[aux_4(?X, ?Y) :- GraduateStudent(?X).])
}
(mastersDegreeFrom[2],University[1]) -> {
	([mastersDegreeFrom[2], University[1]],[University(?Y) :- mastersDegreeFrom(?X, ?Y).])
}
(Degree[1],Degree[1]) -> {
	([],[])
}
(Degree[1],Work[1]) -> {
	([Degree[1], Work[1]],[Work(?X) :- Degree(?X).])
}
(Exam[1],Work[1]) -> {
	([Exam[1], Work[1]],[Work(?X) :- Exam(?X).])
}
(aux_1[2],headOf[2]) -> {
	([aux_1[2], headOf[2]],[headOf(?X, ?Y) :- aux_1(?X, ?Y).])
}
(aux_1[1],headOf[1]) -> {
	([aux_1[1], headOf[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y).])
}
(aux_1[2],Program[1]) -> {
	([aux_1[2], Program[1]],[Program(?Y) :- aux_1(?X, ?Y).])
}
(takesCourse[1],takesCourse[1]) -> {
	([],[])
}
(takesCourse[2],takesCourse[2]) -> {
	([],[])
}
(aux_2[2],takesCourse[2]) -> {
	([aux_2[2], takesCourse[2]],[takesCourse(?X, ?Y) :- aux_2(?X, ?Y).])
}
(aux_2[1],takesCourse[1]) -> {
	([aux_2[1], takesCourse[1]],[takesCourse(?X, ?Y) :- aux_2(?X, ?Y).])
}
(aux_2[2],Course[1]) -> {
	([aux_2[2], Course[1]],[Course(?Y) :- aux_2(?X, ?Y).])
}
(aux_0[2],headOf[2]) -> {
	([aux_0[2], headOf[2]],[headOf(?X, ?Y) :- aux_0(?X, ?Y).])
}
(aux_0[1],headOf[1]) -> {
	([aux_0[1], headOf[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y).])
}
(aux_0[2],College[1]) -> {
	([aux_0[2], College[1]],[College(?Y) :- aux_0(?X, ?Y).])
}
(aux_3[2],worksFor[2]) -> {
	([aux_3[2], worksFor[2]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(aux_3[1],worksFor[1]) -> {
	([aux_3[1], worksFor[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(aux_3[2],Organization[1]) -> {
	([aux_3[2], Organization[1]],[Organization(?Y) :- aux_3(?X, ?Y).])
}
(aux_4[2],takesCourse[2]) -> {
	([aux_4[2], takesCourse[2]],[takesCourse(?X, ?Y) :- aux_4(?X, ?Y).])
}
(aux_4[1],takesCourse[1]) -> {
	([aux_4[1], takesCourse[1]],[takesCourse(?X, ?Y) :- aux_4(?X, ?Y).])
}
(aux_4[2],GraduateCourse[1]) -> {
	([aux_4[2], GraduateCourse[1]],[GraduateCourse(?Y) :- aux_4(?X, ?Y).])
}
Nodes: 86
Edges: 189
Longest Path: 1


2015-05-13 17:56:13 deri.iris.queryrewriting.QueryRewritingTest [DEBUG] Computing cover graph.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [DEBUG] Cover Graph:
(ClericalStaff[1],aux_3[1]) -> {
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(degreeFrom[1],degreeFrom[1]) -> {
	([],[])
	([degreeFrom[1], hasAlumnus[2], degreeFrom[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(degreeFrom[2],degreeFrom[2]) -> {
	([],[])
	([degreeFrom[2], hasAlumnus[1], degreeFrom[2]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(doctoralDegreeFrom[1],doctoralDegreeFrom[1]) -> {
	([],[])
}
(doctoralDegreeFrom[2],doctoralDegreeFrom[2]) -> {
	([],[])
}
(Faculty[1],Faculty[1]) -> {
	([],[])
}
(isPartOfUniversity[1],isPartOfUniversity[1]) -> {
	([],[])
	([isPartOfUniversity[1], hasFaculty[2], isPartOfUniversity[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y).])
}
(isPartOfUniversity[2],isPartOfUniversity[2]) -> {
	([],[])
	([isPartOfUniversity[2], hasFaculty[1], isPartOfUniversity[2]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y).])
}
(Professor[1],Professor[1]) -> {
	([],[])
}
(Dean[1],Dean[1]) -> {
	([],[])
}
(University[1],University[1]) -> {
	([],[])
}
(undergraduateDegreeFrom[1],undergraduateDegreeFrom[1]) -> {
	([],[])
}
(undergraduateDegreeFrom[2],undergraduateDegreeFrom[2]) -> {
	([],[])
}
(Organization[1],Organization[1]) -> {
	([],[])
}
(hasFaculty[1],hasFaculty[1]) -> {
	([],[])
	([hasFaculty[1], isPartOfUniversity[2], hasFaculty[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X).])
}
(hasFaculty[2],hasFaculty[2]) -> {
	([],[])
	([hasFaculty[2], isPartOfUniversity[1], hasFaculty[2]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X).])
}
(Person[1],Person[1]) -> {
	([],[])
}
(Employee[1],Employee[1]) -> {
	([],[])
}
(FullProfessor[1],FullProfessor[1]) -> {
	([],[])
}
(Program[1],Program[1]) -> {
	([],[])
}
(publicationAuthor[1],publicationAuthor[1]) -> {
	([],[])
}
(publicationAuthor[2],publicationAuthor[2]) -> {
	([],[])
}
(FacultyStaff[1],FacultyStaff[1]) -> {
	([],[])
}
(PostDoc[1],PostDoc[1]) -> {
	([],[])
}
(AssociateProfessor[1],AssociateProfessor[1]) -> {
	([],[])
}
(affiliatedOrganizationOf[1],affiliatedOrganizationOf[1]) -> {
	([],[])
}
(affiliatedOrganizationOf[2],affiliatedOrganizationOf[2]) -> {
	([],[])
}
(member[1],member[1]) -> {
	([],[])
	([member[1], memberOf[2], member[1]],[memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(member[2],member[2]) -> {
	([],[])
	([member[2], memberOf[1], member[2]],[memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(memberOf[1],memberOf[1]) -> {
	([],[])
	([memberOf[1], member[2], memberOf[1]],[member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(memberOf[2],memberOf[2]) -> {
	([],[])
	([memberOf[2], member[1], memberOf[2]],[member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(worksFor[1],worksFor[1]) -> {
	([],[])
}
(worksFor[2],worksFor[2]) -> {
	([],[])
}
(AdministrativeStaff[1],AdministrativeStaff[1]) -> {
	([],[])
}
(AssistantProfessor[1],AssistantProfessor[1]) -> {
	([],[])
}
(hasAlumnus[1],hasAlumnus[1]) -> {
	([],[])
	([hasAlumnus[1], degreeFrom[2], hasAlumnus[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(hasAlumnus[2],hasAlumnus[2]) -> {
	([],[])
	([hasAlumnus[2], degreeFrom[1], hasAlumnus[2]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(Exam[1],Exam[1]) -> {
	([],[])
}
(BachelorExam[1],BachelorExam[1]) -> {
	([],[])
}
(aux_0[1],aux_0[1]) -> {
	([],[])
}
(aux_0[2],aux_0[2]) -> {
	([],[])
}
(affiliateOf[1],affiliateOf[1]) -> {
	([],[])
}
(affiliateOf[2],affiliateOf[2]) -> {
	([],[])
}
(advisor[1],advisor[1]) -> {
	([],[])
}
(advisor[2],advisor[2]) -> {
	([],[])
}
(mastersDegreeFrom[1],mastersDegreeFrom[1]) -> {
	([],[])
}
(mastersDegreeFrom[2],mastersDegreeFrom[2]) -> {
	([],[])
}
(Work[1],Work[1]) -> {
	([],[])
}
(Course[1],Course[1]) -> {
	([],[])
}
(headOf[1],headOf[1]) -> {
	([],[])
}
(headOf[2],headOf[2]) -> {
	([],[])
}
(Director[1],Director[1]) -> {
	([],[])
}
(Lecturer[1],Lecturer[1]) -> {
	([],[])
}
(tenured[1],tenured[1]) -> {
	([],[])
}
(tenured[2],tenured[2]) -> {
	([],[])
}
(Student[1],Student[1]) -> {
	([],[])
}
(hasExamRecord[1],hasExamRecord[1]) -> {
	([],[])
}
(hasExamRecord[2],hasExamRecord[2]) -> {
	([],[])
}
(orgPublication[1],orgPublication[1]) -> {
	([],[])
}
(orgPublication[2],orgPublication[2]) -> {
	([],[])
}
(SystemsStaff[1],SystemsStaff[1]) -> {
	([],[])
}
(ResearchAssistant[1],ResearchAssistant[1]) -> {
	([],[])
}
(ExamRecord[1],ExamRecord[1]) -> {
	([],[])
}
(Chair[1],Chair[1]) -> {
	([],[])
}
(Career[1],Career[1]) -> {
	([],[])
}
(VisitingProfessor[1],VisitingProfessor[1]) -> {
	([],[])
}
(aux_1[1],aux_1[1]) -> {
	([],[])
}
(aux_1[2],aux_1[2]) -> {
	([],[])
}
(teachingAssistantOf[1],teachingAssistantOf[1]) -> {
	([],[])
}
(teachingAssistantOf[2],teachingAssistantOf[2]) -> {
	([],[])
}
(College[1],College[1]) -> {
	([],[])
}
(GraduateCourse[1],GraduateCourse[1]) -> {
	([],[])
}
(aux_2[1],aux_2[1]) -> {
	([],[])
}
(aux_2[2],aux_2[2]) -> {
	([],[])
}
(ExDean[1],ExDean[1]) -> {
	([],[])
}
(aux_3[1],aux_3[1]) -> {
	([],[])
}
(aux_3[2],aux_3[2]) -> {
	([],[])
}
(ClericalStaff[1],ClericalStaff[1]) -> {
	([],[])
}
(GraduateStudent[1],GraduateStudent[1]) -> {
	([],[])
}
(UndergraduateStudent[1],UndergraduateStudent[1]) -> {
	([],[])
}
(teacherOf[1],teacherOf[1]) -> {
	([],[])
}
(teacherOf[2],teacherOf[2]) -> {
	([],[])
}
(aux_4[1],aux_4[1]) -> {
	([],[])
}
(aux_4[2],aux_4[2]) -> {
	([],[])
}
(Degree[1],Degree[1]) -> {
	([],[])
}
(takesCourse[1],takesCourse[1]) -> {
	([],[])
}
(takesCourse[2],takesCourse[2]) -> {
	([],[])
}
(FacultyStaff[1],aux_3[1]) -> {
	([FacultyStaff[1], Employee[1], aux_3[1]],[Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(hasFaculty[2],Organization[1]) -> {
	([hasFaculty[2], Faculty[1], Organization[1]],[Faculty(?Y) :- hasFaculty(?X, ?Y)., Organization(?X) :- Faculty(?X).])
	([hasFaculty[2], isPartOfUniversity[1], Faculty[1], Organization[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., Faculty(?X) :- isPartOfUniversity(?X, ?Y)., Organization(?X) :- Faculty(?X).])
	([hasFaculty[2], isPartOfUniversity[1], hasFaculty[2], Faculty[1], Organization[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., Faculty(?Y) :- hasFaculty(?X, ?Y)., Organization(?X) :- Faculty(?X).])
	([hasFaculty[2], isPartOfUniversity[1], hasFaculty[2], isPartOfUniversity[1], Faculty[1], Organization[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., Faculty(?X) :- isPartOfUniversity(?X, ?Y)., Organization(?X) :- Faculty(?X).])
}
(isPartOfUniversity[2],Organization[1]) -> {
	([isPartOfUniversity[2], University[1], Organization[1]],[University(?Y) :- isPartOfUniversity(?X, ?Y)., Organization(?X) :- University(?X).])
	([isPartOfUniversity[2], hasFaculty[1], University[1], Organization[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., University(?X) :- hasFaculty(?X, ?Y)., Organization(?X) :- University(?X).])
	([isPartOfUniversity[2], hasFaculty[1], isPartOfUniversity[2], University[1], Organization[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., University(?Y) :- isPartOfUniversity(?X, ?Y)., Organization(?X) :- University(?X).])
	([isPartOfUniversity[2], hasFaculty[1], isPartOfUniversity[2], hasFaculty[1], University[1], Organization[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., University(?X) :- hasFaculty(?X, ?Y)., Organization(?X) :- University(?X).])
}
(Director[1],memberOf[1]) -> {
	([Director[1], aux_1[1], headOf[1], worksFor[1], memberOf[1]],[aux_1(?X, ?Y) :- Director(?X)., headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([Director[1], aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[aux_1(?X, ?Y) :- Director(?X)., headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(advisor[2],aux_3[1]) -> {
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(advisor[2],FacultyStaff[1]) -> {
	([advisor[2], Professor[1], FacultyStaff[1]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X).])
}
(advisor[2],Professor[1]) -> {
	([advisor[2], Professor[1]],[Professor(?Y) :- advisor(?X, ?Y).])
}
(UndergraduateStudent[1],takesCourse[1]) -> {
	([UndergraduateStudent[1], Student[1], aux_2[1], takesCourse[1]],[Student(?X) :- UndergraduateStudent(?X)., aux_2(?X, ?Y) :- Student(?X)., takesCourse(?X, ?Y) :- aux_2(?X, ?Y).])
}
(FullProfessor[1],member[2]) -> {
	([FullProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([FullProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(SystemsStaff[1],Employee[1]) -> {
	([SystemsStaff[1], AdministrativeStaff[1], Employee[1]],[AdministrativeStaff(?X) :- SystemsStaff(?X)., Employee(?X) :- AdministrativeStaff(?X).])
}
(Professor[1],FacultyStaff[1]) -> {
	([Professor[1], FacultyStaff[1]],[FacultyStaff(?X) :- Professor(?X).])
}
(teacherOf[2],Course[1]) -> {
	([teacherOf[2], Course[1]],[Course(?Y) :- teacherOf(?X, ?Y).])
}
(Professor[1],aux_3[1]) -> {
	([Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(SystemsStaff[1],memberOf[1]) -> {
	([SystemsStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[AdministrativeStaff(?X) :- SystemsStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(advisor[2],Person[1]) -> {
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1], Person[1]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(hasExamRecord[1],takesCourse[1]) -> {
	([hasExamRecord[1], Student[1], aux_2[1], takesCourse[1]],[Student(?X) :- hasExamRecord(?X, ?Y)., aux_2(?X, ?Y) :- Student(?X)., takesCourse(?X, ?Y) :- aux_2(?X, ?Y).])
}
(aux_1[1],Person[1]) -> {
	([aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2], Person[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(isPartOfUniversity[1],hasFaculty[2]) -> {
	([isPartOfUniversity[1], hasFaculty[2]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X).])
	([isPartOfUniversity[1], hasFaculty[2], isPartOfUniversity[1], hasFaculty[2]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X).])
}
(hasFaculty[2],isPartOfUniversity[1]) -> {
	([hasFaculty[2], isPartOfUniversity[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y).])
	([hasFaculty[2], isPartOfUniversity[1], hasFaculty[2], isPartOfUniversity[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y).])
}
(aux_0[1],Person[1]) -> {
	([aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2], Person[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(degreeFrom[1],Person[1]) -> {
	([degreeFrom[1], Person[1]],[Person(?X) :- degreeFrom(?X, ?Y).])
	([degreeFrom[1], hasAlumnus[2], Person[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., Person(?Y) :- hasAlumnus(?X, ?Y).])
	([degreeFrom[1], hasAlumnus[2], degreeFrom[1], Person[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., Person(?X) :- degreeFrom(?X, ?Y).])
	([degreeFrom[1], hasAlumnus[2], degreeFrom[1], hasAlumnus[2], Person[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., Person(?Y) :- hasAlumnus(?X, ?Y).])
}
(FacultyStaff[1],Person[1]) -> {
	([FacultyStaff[1], Employee[1], Person[1]],[Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(AdministrativeStaff[1],member[2]) -> {
	([AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(aux_3[1],Person[1]) -> {
	([aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(ClericalStaff[1],Person[1]) -> {
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1], Person[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., Person(?X) :- Employee(?X).])
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(isPartOfUniversity[1],Organization[1]) -> {
	([isPartOfUniversity[1], Faculty[1], Organization[1]],[Faculty(?X) :- isPartOfUniversity(?X, ?Y)., Organization(?X) :- Faculty(?X).])
	([isPartOfUniversity[1], hasFaculty[2], Faculty[1], Organization[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., Faculty(?Y) :- hasFaculty(?X, ?Y)., Organization(?X) :- Faculty(?X).])
	([isPartOfUniversity[1], hasFaculty[2], isPartOfUniversity[1], Faculty[1], Organization[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., Faculty(?X) :- isPartOfUniversity(?X, ?Y)., Organization(?X) :- Faculty(?X).])
	([isPartOfUniversity[1], hasFaculty[2], isPartOfUniversity[1], hasFaculty[2], Faculty[1], Organization[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., Faculty(?Y) :- hasFaculty(?X, ?Y)., Organization(?X) :- Faculty(?X).])
}
(doctoralDegreeFrom[1],hasAlumnus[2]) -> {
	([doctoralDegreeFrom[1], degreeFrom[1], hasAlumnus[2]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
	([doctoralDegreeFrom[1], degreeFrom[1], hasAlumnus[2], degreeFrom[1], hasAlumnus[2]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(Professor[1],Person[1]) -> {
	([Professor[1], FacultyStaff[1], Employee[1], Person[1]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(aux_0[2],Organization[1]) -> {
	([aux_0[2], College[1], Organization[1]],[College(?Y) :- aux_0(?X, ?Y)., Organization(?X) :- College(?X).])
	([aux_0[2], headOf[2], worksFor[2], memberOf[2], member[1], memberOf[2], member[1], Organization[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
}
(orgPublication[1],Organization[1]) -> {
	([orgPublication[1], Organization[1]],[Organization(?X) :- orgPublication(?X, ?Y).])
}
(isPartOfUniversity[2],hasFaculty[1]) -> {
	([isPartOfUniversity[2], hasFaculty[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X).])
	([isPartOfUniversity[2], hasFaculty[1], isPartOfUniversity[2], hasFaculty[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X).])
}
(hasFaculty[1],isPartOfUniversity[2]) -> {
	([hasFaculty[1], isPartOfUniversity[2]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y).])
	([hasFaculty[1], isPartOfUniversity[2], hasFaculty[1], isPartOfUniversity[2]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y).])
}
(Employee[1],memberOf[1]) -> {
	([Employee[1], aux_3[1], worksFor[1], memberOf[1]],[aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(undergraduateDegreeFrom[1],hasAlumnus[2]) -> {
	([undergraduateDegreeFrom[1], degreeFrom[1], hasAlumnus[2]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
	([undergraduateDegreeFrom[1], degreeFrom[1], hasAlumnus[2], degreeFrom[1], hasAlumnus[2]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(hasFaculty[1],Organization[1]) -> {
	([hasFaculty[1], University[1], Organization[1]],[University(?X) :- hasFaculty(?X, ?Y)., Organization(?X) :- University(?X).])
	([hasFaculty[1], isPartOfUniversity[2], University[1], Organization[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., University(?Y) :- isPartOfUniversity(?X, ?Y)., Organization(?X) :- University(?X).])
	([hasFaculty[1], isPartOfUniversity[2], hasFaculty[1], University[1], Organization[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., University(?X) :- hasFaculty(?X, ?Y)., Organization(?X) :- University(?X).])
	([hasFaculty[1], isPartOfUniversity[2], hasFaculty[1], isPartOfUniversity[2], University[1], Organization[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., University(?Y) :- isPartOfUniversity(?X, ?Y)., Organization(?X) :- University(?X).])
}
(memberOf[2],member[1]) -> {
	([memberOf[2], member[1]],[member(?X, ?Y) :- memberOf(?Y, ?X).])
	([memberOf[2], member[1], memberOf[2], member[1]],[member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(member[1],memberOf[2]) -> {
	([member[1], memberOf[2]],[memberOf(?Y, ?X) :- member(?X, ?Y).])
	([member[1], memberOf[2], member[1], memberOf[2]],[memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(AssociateProfessor[1],Person[1]) -> {
	([AssociateProfessor[1], Professor[1], FacultyStaff[1], Employee[1], Person[1]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([AssociateProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(ExDean[1],Professor[1]) -> {
	([ExDean[1], Professor[1]],[Professor(?X) :- ExDean(?X).])
}
(aux_1[2],Organization[1]) -> {
	([aux_1[2], Program[1], Organization[1]],[Program(?Y) :- aux_1(?X, ?Y)., Organization(?X) :- Program(?X).])
	([aux_1[2], headOf[2], worksFor[2], memberOf[2], member[1], Organization[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
	([aux_1[2], headOf[2], worksFor[2], memberOf[2], member[1], memberOf[2], member[1], Organization[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
}
(Employee[1],member[2]) -> {
	([Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(VisitingProfessor[1],Person[1]) -> {
	([VisitingProfessor[1], Professor[1], FacultyStaff[1], Employee[1], Person[1]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([VisitingProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(degreeFrom[2],Organization[1]) -> {
	([degreeFrom[2], University[1], Organization[1]],[University(?Y) :- degreeFrom(?X, ?Y)., Organization(?X) :- University(?X).])
	([degreeFrom[2], hasAlumnus[1], University[1], Organization[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
	([degreeFrom[2], hasAlumnus[1], degreeFrom[2], University[1], Organization[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., University(?Y) :- degreeFrom(?X, ?Y)., Organization(?X) :- University(?X).])
	([degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1], Organization[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
}
(aux_3[2],Organization[1]) -> {
	([aux_3[2], Organization[1]],[Organization(?Y) :- aux_3(?X, ?Y).])
	([aux_3[2], worksFor[2], memberOf[2], member[1], Organization[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
	([aux_3[2], worksFor[2], memberOf[2], member[1], memberOf[2], member[1], Organization[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
}
(undergraduateDegreeFrom[2],hasAlumnus[1]) -> {
	([undergraduateDegreeFrom[2], degreeFrom[2], hasAlumnus[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
	([undergraduateDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(advisor[1],Person[1]) -> {
	([advisor[1], Person[1]],[Person(?X) :- advisor(?X, ?Y).])
}
(SystemsStaff[1],member[2]) -> {
	([SystemsStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[AdministrativeStaff(?X) :- SystemsStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([SystemsStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[AdministrativeStaff(?X) :- SystemsStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(FullProfessor[1],Employee[1]) -> {
	([FullProfessor[1], Professor[1], FacultyStaff[1], Employee[1]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(GraduateStudent[1],aux_4[1]) -> {
	([GraduateStudent[1], aux_4[1]],[aux_4(?X, ?Y) :- GraduateStudent(?X).])
}
(ExDean[1],aux_3[1]) -> {
	([ExDean[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(ExDean[1],FacultyStaff[1]) -> {
	([ExDean[1], Professor[1], FacultyStaff[1]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X).])
}
(AdministrativeStaff[1],memberOf[1]) -> {
	([AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(teacherOf[1],Person[1]) -> {
	([teacherOf[1], FacultyStaff[1], Employee[1], Person[1]],[FacultyStaff(?X) :- teacherOf(?X, ?Y)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([teacherOf[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[FacultyStaff(?X) :- teacherOf(?X, ?Y)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(aux_4[2],GraduateCourse[1]) -> {
	([aux_4[2], GraduateCourse[1]],[GraduateCourse(?Y) :- aux_4(?X, ?Y).])
}
(VisitingProfessor[1],aux_3[1]) -> {
	([VisitingProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(mastersDegreeFrom[1],hasAlumnus[2]) -> {
	([mastersDegreeFrom[1], degreeFrom[1], hasAlumnus[2]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
	([mastersDegreeFrom[1], degreeFrom[1], hasAlumnus[2], degreeFrom[1], hasAlumnus[2]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(AdministrativeStaff[1],Employee[1]) -> {
	([AdministrativeStaff[1], Employee[1]],[Employee(?X) :- AdministrativeStaff(?X).])
}
(Dean[1],worksFor[1]) -> {
	([Dean[1], aux_0[1], headOf[1], worksFor[1]],[aux_0(?X, ?Y) :- Dean(?X)., headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(VisitingProfessor[1],FacultyStaff[1]) -> {
	([VisitingProfessor[1], Professor[1], FacultyStaff[1]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X).])
}
(AssociateProfessor[1],aux_3[1]) -> {
	([AssociateProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(FullProfessor[1],memberOf[1]) -> {
	([FullProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(AssociateProfessor[1],FacultyStaff[1]) -> {
	([AssociateProfessor[1], Professor[1], FacultyStaff[1]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X).])
}
(ResearchAssistant[1],takesCourse[1]) -> {
	([ResearchAssistant[1], Student[1], aux_2[1], takesCourse[1]],[Student(?X) :- ResearchAssistant(?X)., aux_2(?X, ?Y) :- Student(?X)., takesCourse(?X, ?Y) :- aux_2(?X, ?Y).])
}
(teacherOf[1],aux_3[1]) -> {
	([teacherOf[1], FacultyStaff[1], Employee[1], aux_3[1]],[FacultyStaff(?X) :- teacherOf(?X, ?Y)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(memberOf[1],member[2]) -> {
	([memberOf[1], member[2]],[member(?X, ?Y) :- memberOf(?Y, ?X).])
	([memberOf[1], member[2], memberOf[1], member[2]],[member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(member[2],memberOf[1]) -> {
	([member[2], memberOf[1]],[memberOf(?Y, ?X) :- member(?X, ?Y).])
	([member[2], memberOf[1], member[2], memberOf[1]],[memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(teacherOf[1],FacultyStaff[1]) -> {
	([teacherOf[1], FacultyStaff[1]],[FacultyStaff(?X) :- teacherOf(?X, ?Y).])
}
(ExDean[1],Person[1]) -> {
	([ExDean[1], Professor[1], FacultyStaff[1], Employee[1], Person[1]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([ExDean[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(AssociateProfessor[1],Professor[1]) -> {
	([AssociateProfessor[1], Professor[1]],[Professor(?X) :- AssociateProfessor(?X).])
}
(VisitingProfessor[1],Professor[1]) -> {
	([VisitingProfessor[1], Professor[1]],[Professor(?X) :- VisitingProfessor(?X).])
}
(GraduateStudent[1],Person[1]) -> {
	([GraduateStudent[1], Person[1]],[Person(?X) :- GraduateStudent(?X).])
}
(Director[1],member[2]) -> {
	([Director[1], aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2]],[aux_1(?X, ?Y) :- Director(?X)., headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([Director[1], aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[aux_1(?X, ?Y) :- Director(?X)., headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(PostDoc[1],worksFor[1]) -> {
	([PostDoc[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[FacultyStaff(?X) :- PostDoc(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(SystemsStaff[1],AdministrativeStaff[1]) -> {
	([SystemsStaff[1], AdministrativeStaff[1]],[AdministrativeStaff(?X) :- SystemsStaff(?X).])
}
(worksFor[2],Organization[1]) -> {
	([worksFor[2], memberOf[2], member[1], Organization[1]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
	([worksFor[2], memberOf[2], member[1], memberOf[2], member[1], Organization[1]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
}
(worksFor[1],Person[1]) -> {
	([worksFor[1], memberOf[1], member[2], Person[1]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(isPartOfUniversity[1],Faculty[1]) -> {
	([isPartOfUniversity[1], Faculty[1]],[Faculty(?X) :- isPartOfUniversity(?X, ?Y).])
	([isPartOfUniversity[1], hasFaculty[2], Faculty[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., Faculty(?Y) :- hasFaculty(?X, ?Y).])
	([isPartOfUniversity[1], hasFaculty[2], isPartOfUniversity[1], Faculty[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., Faculty(?X) :- isPartOfUniversity(?X, ?Y).])
	([isPartOfUniversity[1], hasFaculty[2], isPartOfUniversity[1], hasFaculty[2], Faculty[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., Faculty(?Y) :- hasFaculty(?X, ?Y).])
}
(AssistantProfessor[1],Employee[1]) -> {
	([AssistantProfessor[1], Professor[1], FacultyStaff[1], Employee[1]],[Professor(?X) :- AssistantProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(GraduateCourse[1],Course[1]) -> {
	([GraduateCourse[1], Course[1]],[Course(?X) :- GraduateCourse(?X).])
}
(UndergraduateStudent[1],Person[1]) -> {
	([UndergraduateStudent[1], Student[1], Person[1]],[Student(?X) :- UndergraduateStudent(?X)., Person(?X) :- Student(?X).])
}
(mastersDegreeFrom[1],Person[1]) -> {
	([mastersDegreeFrom[1], Person[1]],[Person(?X) :- mastersDegreeFrom(?X, ?Y).])
	([mastersDegreeFrom[1], degreeFrom[1], Person[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., Person(?X) :- degreeFrom(?X, ?Y).])
	([mastersDegreeFrom[1], degreeFrom[1], hasAlumnus[2], Person[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., Person(?Y) :- hasAlumnus(?X, ?Y).])
	([mastersDegreeFrom[1], degreeFrom[1], hasAlumnus[2], degreeFrom[1], hasAlumnus[2], Person[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., Person(?Y) :- hasAlumnus(?X, ?Y).])
}
(aux_2[2],takesCourse[2]) -> {
	([aux_2[2], takesCourse[2]],[takesCourse(?X, ?Y) :- aux_2(?X, ?Y).])
}
(aux_4[2],takesCourse[2]) -> {
	([aux_4[2], takesCourse[2]],[takesCourse(?X, ?Y) :- aux_4(?X, ?Y).])
}
(hasExamRecord[1],aux_2[1]) -> {
	([hasExamRecord[1], Student[1], aux_2[1]],[Student(?X) :- hasExamRecord(?X, ?Y)., aux_2(?X, ?Y) :- Student(?X).])
}
(Director[1],headOf[1]) -> {
	([Director[1], aux_1[1], headOf[1]],[aux_1(?X, ?Y) :- Director(?X)., headOf(?X, ?Y) :- aux_1(?X, ?Y).])
}
(aux_1[2],Program[1]) -> {
	([aux_1[2], Program[1]],[Program(?Y) :- aux_1(?X, ?Y).])
}
(Chair[1],Employee[1]) -> {
	([Chair[1], Professor[1], FacultyStaff[1], Employee[1]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(headOf[1],memberOf[1]) -> {
	([headOf[1], worksFor[1], memberOf[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(ExamRecord[1],Work[1]) -> {
	([ExamRecord[1], Work[1]],[Work(?X) :- ExamRecord(?X).])
}
(advisor[2],worksFor[1]) -> {
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(mastersDegreeFrom[2],University[1]) -> {
	([mastersDegreeFrom[2], University[1]],[University(?Y) :- mastersDegreeFrom(?X, ?Y).])
	([mastersDegreeFrom[2], degreeFrom[2], University[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., University(?Y) :- degreeFrom(?X, ?Y).])
	([mastersDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], University[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., University(?Y) :- degreeFrom(?X, ?Y).])
	([mastersDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y).])
}
(UndergraduateStudent[1],aux_2[1]) -> {
	([UndergraduateStudent[1], Student[1], aux_2[1]],[Student(?X) :- UndergraduateStudent(?X)., aux_2(?X, ?Y) :- Student(?X).])
}
(affiliateOf[1],Organization[1]) -> {
	([affiliateOf[1], Organization[1]],[Organization(?X) :- affiliateOf(?X, ?Y).])
}
(Lecturer[1],member[2]) -> {
	([Lecturer[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[FacultyStaff(?X) :- Lecturer(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([Lecturer[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[FacultyStaff(?X) :- Lecturer(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(mastersDegreeFrom[1],degreeFrom[1]) -> {
	([mastersDegreeFrom[1], degreeFrom[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y).])
	([mastersDegreeFrom[1], degreeFrom[1], hasAlumnus[2], degreeFrom[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(aux_1[1],worksFor[1]) -> {
	([aux_1[1], headOf[1], worksFor[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(aux_0[1],worksFor[1]) -> {
	([aux_0[1], headOf[1], worksFor[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(hasFaculty[2],Faculty[1]) -> {
	([hasFaculty[2], Faculty[1]],[Faculty(?Y) :- hasFaculty(?X, ?Y).])
	([hasFaculty[2], isPartOfUniversity[1], Faculty[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., Faculty(?X) :- isPartOfUniversity(?X, ?Y).])
	([hasFaculty[2], isPartOfUniversity[1], hasFaculty[2], Faculty[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., Faculty(?Y) :- hasFaculty(?X, ?Y).])
	([hasFaculty[2], isPartOfUniversity[1], hasFaculty[2], isPartOfUniversity[1], Faculty[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., Faculty(?X) :- isPartOfUniversity(?X, ?Y).])
}
(publicationAuthor[2],Person[1]) -> {
	([publicationAuthor[2], Person[1]],[Person(?Y) :- publicationAuthor(?X, ?Y).])
}
(Faculty[1],Organization[1]) -> {
	([Faculty[1], Organization[1]],[Organization(?X) :- Faculty(?X).])
}
(Chair[1],memberOf[1]) -> {
	([Chair[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([Chair[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(FacultyStaff[1],worksFor[1]) -> {
	([FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(ClericalStaff[1],worksFor[1]) -> {
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(aux_3[1],worksFor[1]) -> {
	([aux_3[1], worksFor[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(headOf[2],memberOf[2]) -> {
	([headOf[2], worksFor[2], memberOf[2]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([headOf[2], worksFor[2], memberOf[2], member[1], memberOf[2]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(Professor[1],worksFor[1]) -> {
	([Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(aux_0[2],worksFor[2]) -> {
	([aux_0[2], headOf[2], worksFor[2]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(aux_4[1],takesCourse[1]) -> {
	([aux_4[1], takesCourse[1]],[takesCourse(?X, ?Y) :- aux_4(?X, ?Y).])
}
(hasAlumnus[1],degreeFrom[2]) -> {
	([hasAlumnus[1], degreeFrom[2]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
	([hasAlumnus[1], degreeFrom[2], hasAlumnus[1], degreeFrom[2]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(degreeFrom[2],hasAlumnus[1]) -> {
	([degreeFrom[2], hasAlumnus[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
	([degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(aux_2[1],takesCourse[1]) -> {
	([aux_2[1], takesCourse[1]],[takesCourse(?X, ?Y) :- aux_2(?X, ?Y).])
}
(undergraduateDegreeFrom[2],Organization[1]) -> {
	([undergraduateDegreeFrom[2], University[1], Organization[1]],[University(?Y) :- undergraduateDegreeFrom(?X, ?Y)., Organization(?X) :- University(?X).])
	([undergraduateDegreeFrom[2], degreeFrom[2], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., University(?Y) :- degreeFrom(?X, ?Y)., Organization(?X) :- University(?X).])
	([undergraduateDegreeFrom[2], degreeFrom[2], hasAlumnus[1], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
	([undergraduateDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
}
(tenured[1],member[2]) -> {
	([tenured[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([tenured[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(hasExamRecord[1],Person[1]) -> {
	([hasExamRecord[1], Student[1], Person[1]],[Student(?X) :- hasExamRecord(?X, ?Y)., Person(?X) :- Student(?X).])
}
(AssistantProfessor[1],memberOf[1]) -> {
	([AssistantProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Professor(?X) :- AssistantProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(hasAlumnus[2],degreeFrom[1]) -> {
	([hasAlumnus[2], degreeFrom[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
	([hasAlumnus[2], degreeFrom[1], hasAlumnus[2], degreeFrom[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(degreeFrom[1],hasAlumnus[2]) -> {
	([degreeFrom[1], hasAlumnus[2]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
	([degreeFrom[1], hasAlumnus[2], degreeFrom[1], hasAlumnus[2]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(tenured[1],memberOf[1]) -> {
	([tenured[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([tenured[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(doctoralDegreeFrom[1],Person[1]) -> {
	([doctoralDegreeFrom[1], Person[1]],[Person(?X) :- doctoralDegreeFrom(?X, ?Y).])
	([doctoralDegreeFrom[1], degreeFrom[1], Person[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., Person(?X) :- degreeFrom(?X, ?Y).])
	([doctoralDegreeFrom[1], degreeFrom[1], hasAlumnus[2], Person[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., Person(?Y) :- hasAlumnus(?X, ?Y).])
	([doctoralDegreeFrom[1], degreeFrom[1], hasAlumnus[2], degreeFrom[1], hasAlumnus[2], Person[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., Person(?Y) :- hasAlumnus(?X, ?Y).])
}
(AssociateProfessor[1],worksFor[1]) -> {
	([AssociateProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(Dean[1],aux_3[1]) -> {
	([Dean[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[Professor(?X) :- Dean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(aux_1[2],worksFor[2]) -> {
	([aux_1[2], headOf[2], worksFor[2]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(VisitingProfessor[1],worksFor[1]) -> {
	([VisitingProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(aux_3[2],worksFor[2]) -> {
	([aux_3[2], worksFor[2]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(Dean[1],FacultyStaff[1]) -> {
	([Dean[1], Professor[1], FacultyStaff[1]],[Professor(?X) :- Dean(?X)., FacultyStaff(?X) :- Professor(?X).])
}
(AssistantProfessor[1],member[2]) -> {
	([AssistantProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Professor(?X) :- AssistantProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([AssistantProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Professor(?X) :- AssistantProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(Dean[1],aux_0[1]) -> {
	([Dean[1], aux_0[1]],[aux_0(?X, ?Y) :- Dean(?X).])
}
(PostDoc[1],aux_3[1]) -> {
	([PostDoc[1], FacultyStaff[1], Employee[1], aux_3[1]],[FacultyStaff(?X) :- PostDoc(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(PostDoc[1],FacultyStaff[1]) -> {
	([PostDoc[1], FacultyStaff[1]],[FacultyStaff(?X) :- PostDoc(?X).])
}
(undergraduateDegreeFrom[1],Person[1]) -> {
	([undergraduateDegreeFrom[1], Person[1]],[Person(?X) :- undergraduateDegreeFrom(?X, ?Y).])
	([undergraduateDegreeFrom[1], degreeFrom[1], Person[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., Person(?X) :- degreeFrom(?X, ?Y).])
	([undergraduateDegreeFrom[1], degreeFrom[1], hasAlumnus[2], Person[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., Person(?Y) :- hasAlumnus(?X, ?Y).])
	([undergraduateDegreeFrom[1], degreeFrom[1], hasAlumnus[2], degreeFrom[1], hasAlumnus[2], Person[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., Person(?Y) :- hasAlumnus(?X, ?Y).])
}
(Dean[1],Professor[1]) -> {
	([Dean[1], Professor[1]],[Professor(?X) :- Dean(?X).])
}
(Lecturer[1],memberOf[1]) -> {
	([Lecturer[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[FacultyStaff(?X) :- Lecturer(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(teachingAssistantOf[2],Course[1]) -> {
	([teachingAssistantOf[2], Course[1]],[Course(?Y) :- teachingAssistantOf(?X, ?Y).])
}
(Chair[1],member[2]) -> {
	([Chair[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([Chair[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(teacherOf[1],worksFor[1]) -> {
	([teacherOf[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[FacultyStaff(?X) :- teacherOf(?X, ?Y)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(Program[1],Organization[1]) -> {
	([Program[1], Organization[1]],[Organization(?X) :- Program(?X).])
}
(ResearchAssistant[1],aux_2[1]) -> {
	([ResearchAssistant[1], Student[1], aux_2[1]],[Student(?X) :- ResearchAssistant(?X)., aux_2(?X, ?Y) :- Student(?X).])
}
(aux_2[2],Course[1]) -> {
	([aux_2[2], Course[1]],[Course(?Y) :- aux_2(?X, ?Y).])
}
(Dean[1],Person[1]) -> {
	([Dean[1], Professor[1], FacultyStaff[1], Employee[1], Person[1]],[Professor(?X) :- Dean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([Dean[1], aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2], Person[1]],[aux_0(?X, ?Y) :- Dean(?X)., headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([Dean[1], aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[aux_0(?X, ?Y) :- Dean(?X)., headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(aux_4[2],Course[1]) -> {
	([aux_4[2], GraduateCourse[1], Course[1]],[GraduateCourse(?Y) :- aux_4(?X, ?Y)., Course(?X) :- GraduateCourse(?X).])
}
(GraduateStudent[1],takesCourse[1]) -> {
	([GraduateStudent[1], aux_4[1], takesCourse[1]],[aux_4(?X, ?Y) :- GraduateStudent(?X)., takesCourse(?X, ?Y) :- aux_4(?X, ?Y).])
}
(Exam[1],Work[1]) -> {
	([Exam[1], Work[1]],[Work(?X) :- Exam(?X).])
}
(headOf[1],member[2]) -> {
	([headOf[1], worksFor[1], memberOf[1], member[2]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(hasAlumnus[2],Person[1]) -> {
	([hasAlumnus[2], Person[1]],[Person(?Y) :- hasAlumnus(?X, ?Y).])
	([hasAlumnus[2], degreeFrom[1], Person[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., Person(?X) :- degreeFrom(?X, ?Y).])
	([hasAlumnus[2], degreeFrom[1], hasAlumnus[2], Person[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., Person(?Y) :- hasAlumnus(?X, ?Y).])
	([hasAlumnus[2], degreeFrom[1], hasAlumnus[2], degreeFrom[1], Person[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., Person(?X) :- degreeFrom(?X, ?Y).])
}
(headOf[2],member[1]) -> {
	([headOf[2], worksFor[2], memberOf[2], member[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([headOf[2], worksFor[2], memberOf[2], member[1], memberOf[2], member[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(doctoralDegreeFrom[1],degreeFrom[1]) -> {
	([doctoralDegreeFrom[1], degreeFrom[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y).])
	([doctoralDegreeFrom[1], degreeFrom[1], hasAlumnus[2], degreeFrom[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(Lecturer[1],Employee[1]) -> {
	([Lecturer[1], FacultyStaff[1], Employee[1]],[FacultyStaff(?X) :- Lecturer(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(ResearchAssistant[1],Person[1]) -> {
	([ResearchAssistant[1], Student[1], Person[1]],[Student(?X) :- ResearchAssistant(?X)., Person(?X) :- Student(?X).])
}
(ExDean[1],worksFor[1]) -> {
	([ExDean[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(hasAlumnus[1],Organization[1]) -> {
	([hasAlumnus[1], University[1], Organization[1]],[University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
	([hasAlumnus[1], degreeFrom[2], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., University(?Y) :- degreeFrom(?X, ?Y)., Organization(?X) :- University(?X).])
	([hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
	([hasAlumnus[1], degreeFrom[2], hasAlumnus[1], degreeFrom[2], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., University(?Y) :- degreeFrom(?X, ?Y)., Organization(?X) :- University(?X).])
}
(undergraduateDegreeFrom[2],degreeFrom[2]) -> {
	([undergraduateDegreeFrom[2], degreeFrom[2]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y).])
	([undergraduateDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(affiliateOf[2],Person[1]) -> {
	([affiliateOf[2], Person[1]],[Person(?Y) :- affiliateOf(?X, ?Y).])
}
(doctoralDegreeFrom[2],University[1]) -> {
	([doctoralDegreeFrom[2], University[1]],[University(?Y) :- doctoralDegreeFrom(?X, ?Y).])
	([doctoralDegreeFrom[2], degreeFrom[2], University[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., University(?Y) :- degreeFrom(?X, ?Y).])
	([doctoralDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], University[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., University(?Y) :- degreeFrom(?X, ?Y).])
	([doctoralDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y).])
}
(PostDoc[1],Person[1]) -> {
	([PostDoc[1], FacultyStaff[1], Employee[1], Person[1]],[FacultyStaff(?X) :- PostDoc(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([PostDoc[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[FacultyStaff(?X) :- PostDoc(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(tenured[1],Employee[1]) -> {
	([tenured[1], Professor[1], FacultyStaff[1], Employee[1]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(undergraduateDegreeFrom[1],degreeFrom[1]) -> {
	([undergraduateDegreeFrom[1], degreeFrom[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y).])
	([undergraduateDegreeFrom[1], degreeFrom[1], hasAlumnus[2], degreeFrom[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(tenured[1],Professor[1]) -> {
	([tenured[1], Professor[1]],[Professor(?X) :- tenured(?X, ?Y).])
}
(worksFor[1],member[2]) -> {
	([worksFor[1], memberOf[1], member[2]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(PostDoc[1],memberOf[1]) -> {
	([PostDoc[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[FacultyStaff(?X) :- PostDoc(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([PostDoc[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[FacultyStaff(?X) :- PostDoc(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(hasExamRecord[1],Student[1]) -> {
	([hasExamRecord[1], Student[1]],[Student(?X) :- hasExamRecord(?X, ?Y).])
}
(headOf[2],Organization[1]) -> {
	([headOf[2], worksFor[2], memberOf[2], member[1], Organization[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
	([headOf[2], worksFor[2], memberOf[2], member[1], memberOf[2], member[1], Organization[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
}
(BachelorExam[1],Exam[1]) -> {
	([BachelorExam[1], Exam[1]],[Exam(?X) :- BachelorExam(?X).])
}
(Lecturer[1],FacultyStaff[1]) -> {
	([Lecturer[1], FacultyStaff[1]],[FacultyStaff(?X) :- Lecturer(?X).])
}
(Lecturer[1],aux_3[1]) -> {
	([Lecturer[1], FacultyStaff[1], Employee[1], aux_3[1]],[FacultyStaff(?X) :- Lecturer(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(Dean[1],memberOf[1]) -> {
	([Dean[1], aux_0[1], headOf[1], worksFor[1], memberOf[1]],[aux_0(?X, ?Y) :- Dean(?X)., headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([Dean[1], aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[aux_0(?X, ?Y) :- Dean(?X)., headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(aux_0[2],College[1]) -> {
	([aux_0[2], College[1]],[College(?Y) :- aux_0(?X, ?Y).])
}
(tenured[1],aux_3[1]) -> {
	([tenured[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(FullProfessor[1],worksFor[1]) -> {
	([FullProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(tenured[1],FacultyStaff[1]) -> {
	([tenured[1], Professor[1], FacultyStaff[1]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X).])
}
(Lecturer[1],Person[1]) -> {
	([Lecturer[1], FacultyStaff[1], Employee[1], Person[1]],[FacultyStaff(?X) :- Lecturer(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([Lecturer[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[FacultyStaff(?X) :- Lecturer(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([Lecturer[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[FacultyStaff(?X) :- Lecturer(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(worksFor[2],memberOf[2]) -> {
	([worksFor[2], memberOf[2]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([worksFor[2], memberOf[2], member[1], memberOf[2]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(Course[1],Work[1]) -> {
	([Course[1], Work[1]],[Work(?X) :- Course(?X).])
}
(Career[1],Work[1]) -> {
	([Career[1], Work[1]],[Work(?X) :- Career(?X).])
}
(AdministrativeStaff[1],worksFor[1]) -> {
	([AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1]],[Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(Dean[1],Employee[1]) -> {
	([Dean[1], Professor[1], FacultyStaff[1], Employee[1]],[Professor(?X) :- Dean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(College[1],Organization[1]) -> {
	([College[1], Organization[1]],[Organization(?X) :- College(?X).])
}
(Student[1],takesCourse[1]) -> {
	([Student[1], aux_2[1], takesCourse[1]],[aux_2(?X, ?Y) :- Student(?X)., takesCourse(?X, ?Y) :- aux_2(?X, ?Y).])
}
(hasAlumnus[1],University[1]) -> {
	([hasAlumnus[1], University[1]],[University(?X) :- hasAlumnus(?X, ?Y).])
	([hasAlumnus[1], degreeFrom[2], University[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., University(?Y) :- degreeFrom(?X, ?Y).])
	([hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y).])
	([hasAlumnus[1], degreeFrom[2], hasAlumnus[1], degreeFrom[2], University[1]],[degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., University(?Y) :- degreeFrom(?X, ?Y).])
}
(doctoralDegreeFrom[2],Organization[1]) -> {
	([doctoralDegreeFrom[2], University[1], Organization[1]],[University(?Y) :- doctoralDegreeFrom(?X, ?Y)., Organization(?X) :- University(?X).])
	([doctoralDegreeFrom[2], degreeFrom[2], hasAlumnus[1], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
	([doctoralDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
}
(tenured[1],Person[1]) -> {
	([tenured[1], Professor[1], FacultyStaff[1], Employee[1], Person[1]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([tenured[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(PostDoc[1],Employee[1]) -> {
	([PostDoc[1], FacultyStaff[1], Employee[1]],[FacultyStaff(?X) :- PostDoc(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(teacherOf[2],Work[1]) -> {
	([teacherOf[2], Course[1], Work[1]],[Course(?Y) :- teacherOf(?X, ?Y)., Work(?X) :- Course(?X).])
}
(UndergraduateStudent[1],Student[1]) -> {
	([UndergraduateStudent[1], Student[1]],[Student(?X) :- UndergraduateStudent(?X).])
}
(mastersDegreeFrom[2],degreeFrom[2]) -> {
	([mastersDegreeFrom[2], degreeFrom[2]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y).])
	([mastersDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(aux_0[2],headOf[2]) -> {
	([aux_0[2], headOf[2]],[headOf(?X, ?Y) :- aux_0(?X, ?Y).])
}
(ResearchAssistant[1],Student[1]) -> {
	([ResearchAssistant[1], Student[1]],[Student(?X) :- ResearchAssistant(?X).])
}
(aux_1[2],headOf[2]) -> {
	([aux_1[2], headOf[2]],[headOf(?X, ?Y) :- aux_1(?X, ?Y).])
}
(aux_0[1],headOf[1]) -> {
	([aux_0[1], headOf[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y).])
}
(aux_1[1],headOf[1]) -> {
	([aux_1[1], headOf[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y).])
}
(AssistantProfessor[1],Person[1]) -> {
	([AssistantProfessor[1], Professor[1], FacultyStaff[1], Employee[1], Person[1]],[Professor(?X) :- AssistantProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([AssistantProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Professor(?X) :- AssistantProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(Employee[1],worksFor[1]) -> {
	([Employee[1], aux_3[1], worksFor[1]],[aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(SystemsStaff[1],worksFor[1]) -> {
	([SystemsStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1]],[AdministrativeStaff(?X) :- SystemsStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(Chair[1],Person[1]) -> {
	([Chair[1], Professor[1], FacultyStaff[1], Employee[1], Person[1]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([Chair[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(Dean[1],member[2]) -> {
	([Dean[1], aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2]],[aux_0(?X, ?Y) :- Dean(?X)., headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([Dean[1], aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[aux_0(?X, ?Y) :- Dean(?X)., headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(AssistantProfessor[1],FacultyStaff[1]) -> {
	([AssistantProfessor[1], Professor[1], FacultyStaff[1]],[Professor(?X) :- AssistantProfessor(?X)., FacultyStaff(?X) :- Professor(?X).])
}
(doctoralDegreeFrom[2],degreeFrom[2]) -> {
	([doctoralDegreeFrom[2], degreeFrom[2]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y).])
	([doctoralDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X).])
}
(undergraduateDegreeFrom[2],University[1]) -> {
	([undergraduateDegreeFrom[2], University[1]],[University(?Y) :- undergraduateDegreeFrom(?X, ?Y).])
	([undergraduateDegreeFrom[2], degreeFrom[2], University[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., University(?Y) :- degreeFrom(?X, ?Y).])
	([undergraduateDegreeFrom[2], degreeFrom[2], hasAlumnus[1], University[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y).])
	([undergraduateDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1]],[degreeFrom(?X, ?Y) :- undergraduateDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y).])
}
(AssistantProfessor[1],aux_3[1]) -> {
	([AssistantProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[Professor(?X) :- AssistantProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(worksFor[2],member[1]) -> {
	([worksFor[2], memberOf[2], member[1]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([worksFor[2], memberOf[2], member[1], memberOf[2], member[1]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(Chair[1],Professor[1]) -> {
	([Chair[1], Professor[1]],[Professor(?X) :- Chair(?X).])
}
(headOf[1],Person[1]) -> {
	([headOf[1], worksFor[1], memberOf[1], member[2], Person[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(hasExamRecord[2],Work[1]) -> {
	([hasExamRecord[2], ExamRecord[1], Work[1]],[ExamRecord(?Y) :- hasExamRecord(?X, ?Y)., Work(?X) :- ExamRecord(?X).])
}
(Chair[1],aux_3[1]) -> {
	([Chair[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(mastersDegreeFrom[2],Organization[1]) -> {
	([mastersDegreeFrom[2], University[1], Organization[1]],[University(?Y) :- mastersDegreeFrom(?X, ?Y)., Organization(?X) :- University(?X).])
	([mastersDegreeFrom[2], degreeFrom[2], hasAlumnus[1], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
	([mastersDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1], Organization[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y)., Organization(?X) :- University(?X).])
}
(Chair[1],FacultyStaff[1]) -> {
	([Chair[1], Professor[1], FacultyStaff[1]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X).])
}
(worksFor[1],memberOf[1]) -> {
	([worksFor[1], memberOf[1]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([worksFor[1], memberOf[1], member[2], memberOf[1]],[memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(PostDoc[1],member[2]) -> {
	([PostDoc[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[FacultyStaff(?X) :- PostDoc(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([PostDoc[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[FacultyStaff(?X) :- PostDoc(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(AssistantProfessor[1],Professor[1]) -> {
	([AssistantProfessor[1], Professor[1]],[Professor(?X) :- AssistantProfessor(?X).])
}
(Director[1],worksFor[1]) -> {
	([Director[1], aux_1[1], headOf[1], worksFor[1]],[aux_1(?X, ?Y) :- Director(?X)., headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(ExDean[1],memberOf[1]) -> {
	([ExDean[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([ExDean[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(VisitingProfessor[1],Employee[1]) -> {
	([VisitingProfessor[1], Professor[1], FacultyStaff[1], Employee[1]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(AdministrativeStaff[1],aux_3[1]) -> {
	([AdministrativeStaff[1], Employee[1], aux_3[1]],[Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(member[2],Person[1]) -> {
	([member[2], Person[1]],[Person(?Y) :- member(?X, ?Y).])
	([member[2], memberOf[1], member[2], Person[1]],[memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(ClericalStaff[1],AdministrativeStaff[1]) -> {
	([ClericalStaff[1], AdministrativeStaff[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X).])
}
(Dean[1],headOf[1]) -> {
	([Dean[1], aux_0[1], headOf[1]],[aux_0(?X, ?Y) :- Dean(?X)., headOf(?X, ?Y) :- aux_0(?X, ?Y).])
}
(AssociateProfessor[1],Employee[1]) -> {
	([AssociateProfessor[1], Professor[1], FacultyStaff[1], Employee[1]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(headOf[2],worksFor[2]) -> {
	([headOf[2], worksFor[2]],[worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(mastersDegreeFrom[2],hasAlumnus[1]) -> {
	([mastersDegreeFrom[2], degreeFrom[2], hasAlumnus[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
	([mastersDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1]],[degreeFrom(?X, ?Y) :- mastersDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(aux_0[2],memberOf[2]) -> {
	([aux_0[2], headOf[2], worksFor[2], memberOf[2]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([aux_0[2], headOf[2], worksFor[2], memberOf[2], member[1], memberOf[2]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(teacherOf[1],Employee[1]) -> {
	([teacherOf[1], FacultyStaff[1], Employee[1]],[FacultyStaff(?X) :- teacherOf(?X, ?Y)., Employee(?X) :- FacultyStaff(?X).])
}
(FullProfessor[1],Person[1]) -> {
	([FullProfessor[1], Professor[1], FacultyStaff[1], Employee[1], Person[1]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., Person(?X) :- Employee(?X).])
	([FullProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([FullProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(degreeFrom[2],University[1]) -> {
	([degreeFrom[2], University[1]],[University(?Y) :- degreeFrom(?X, ?Y).])
	([degreeFrom[2], hasAlumnus[1], University[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y).])
	([degreeFrom[2], hasAlumnus[1], degreeFrom[2], University[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., University(?Y) :- degreeFrom(?X, ?Y).])
	([degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1], University[1]],[hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., University(?X) :- hasAlumnus(?X, ?Y).])
}
(Student[1],aux_2[1]) -> {
	([Student[1], aux_2[1]],[aux_2(?X, ?Y) :- Student(?X).])
}
(Lecturer[1],worksFor[1]) -> {
	([Lecturer[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[FacultyStaff(?X) :- Lecturer(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(GraduateCourse[1],Work[1]) -> {
	([GraduateCourse[1], Course[1], Work[1]],[Course(?X) :- GraduateCourse(?X)., Work(?X) :- Course(?X).])
}
(memberOf[2],Organization[1]) -> {
	([memberOf[2], member[1], Organization[1]],[member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
	([memberOf[2], member[1], memberOf[2], member[1], Organization[1]],[member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
}
(advisor[2],member[2]) -> {
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(teacherOf[1],memberOf[1]) -> {
	([teacherOf[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[FacultyStaff(?X) :- teacherOf(?X, ?Y)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([teacherOf[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[FacultyStaff(?X) :- teacherOf(?X, ?Y)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(ClericalStaff[1],member[2]) -> {
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(aux_3[1],member[2]) -> {
	([aux_3[1], worksFor[1], memberOf[1], member[2]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(AdministrativeStaff[1],Person[1]) -> {
	([AdministrativeStaff[1], Employee[1], Person[1]],[Employee(?X) :- AdministrativeStaff(?X)., Person(?X) :- Employee(?X).])
	([AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(FacultyStaff[1],member[2]) -> {
	([FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(aux_3[2],member[1]) -> {
	([aux_3[2], worksFor[2], memberOf[2], member[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([aux_3[2], worksFor[2], memberOf[2], member[1], memberOf[2], member[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(FullProfessor[1],Professor[1]) -> {
	([FullProfessor[1], Professor[1]],[Professor(?X) :- FullProfessor(?X).])
}
(aux_0[1],member[2]) -> {
	([aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(aux_1[2],member[1]) -> {
	([aux_1[2], headOf[2], worksFor[2], memberOf[2], member[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([aux_1[2], headOf[2], worksFor[2], memberOf[2], member[1], memberOf[2], member[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(aux_1[1],member[2]) -> {
	([aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(AssociateProfessor[1],memberOf[1]) -> {
	([AssociateProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([AssociateProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(FullProfessor[1],FacultyStaff[1]) -> {
	([FullProfessor[1], Professor[1], FacultyStaff[1]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X).])
}
(affiliatedOrganizationOf[2],Organization[1]) -> {
	([affiliatedOrganizationOf[2], Organization[1]],[Organization(?Y) :- affiliatedOrganizationOf(?X, ?Y).])
}
(Student[1],Person[1]) -> {
	([Student[1], Person[1]],[Person(?X) :- Student(?X).])
}
(Degree[1],Work[1]) -> {
	([Degree[1], Work[1]],[Work(?X) :- Degree(?X).])
}
(tenured[1],worksFor[1]) -> {
	([tenured[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[Professor(?X) :- tenured(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(FullProfessor[1],aux_3[1]) -> {
	([FullProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1]],[Professor(?X) :- FullProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(Professor[1],member[2]) -> {
	([Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(ExDean[1],Employee[1]) -> {
	([ExDean[1], Professor[1], FacultyStaff[1], Employee[1]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(VisitingProfessor[1],memberOf[1]) -> {
	([VisitingProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([VisitingProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(AssociateProfessor[1],member[2]) -> {
	([AssociateProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([AssociateProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Professor(?X) :- AssociateProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(aux_2[2],Work[1]) -> {
	([aux_2[2], Course[1], Work[1]],[Course(?Y) :- aux_2(?X, ?Y)., Work(?X) :- Course(?X).])
}
(aux_4[2],Work[1]) -> {
	([aux_4[2], GraduateCourse[1], Course[1], Work[1]],[GraduateCourse(?Y) :- aux_4(?X, ?Y)., Course(?X) :- GraduateCourse(?X)., Work(?X) :- Course(?X).])
}
(Professor[1],memberOf[1]) -> {
	([Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(AssistantProfessor[1],worksFor[1]) -> {
	([AssistantProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[Professor(?X) :- AssistantProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(VisitingProfessor[1],member[2]) -> {
	([VisitingProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([VisitingProfessor[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Professor(?X) :- VisitingProfessor(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(Employee[1],Person[1]) -> {
	([Employee[1], Person[1]],[Person(?X) :- Employee(?X).])
	([Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(isPartOfUniversity[2],University[1]) -> {
	([isPartOfUniversity[2], University[1]],[University(?Y) :- isPartOfUniversity(?X, ?Y).])
	([isPartOfUniversity[2], hasFaculty[1], University[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., University(?X) :- hasFaculty(?X, ?Y).])
	([isPartOfUniversity[2], hasFaculty[1], isPartOfUniversity[2], University[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., University(?Y) :- isPartOfUniversity(?X, ?Y).])
	([isPartOfUniversity[2], hasFaculty[1], isPartOfUniversity[2], hasFaculty[1], University[1]],[hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., University(?X) :- hasFaculty(?X, ?Y).])
}
(Director[1],aux_1[1]) -> {
	([Director[1], aux_1[1]],[aux_1(?X, ?Y) :- Director(?X).])
}
(hasExamRecord[2],ExamRecord[1]) -> {
	([hasExamRecord[2], ExamRecord[1]],[ExamRecord(?Y) :- hasExamRecord(?X, ?Y).])
}
(advisor[2],memberOf[1]) -> {
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(University[1],Organization[1]) -> {
	([University[1], Organization[1]],[Organization(?X) :- University(?X).])
}
(doctoralDegreeFrom[2],hasAlumnus[1]) -> {
	([doctoralDegreeFrom[2], degreeFrom[2], hasAlumnus[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
	([doctoralDegreeFrom[2], degreeFrom[2], hasAlumnus[1], degreeFrom[2], hasAlumnus[1]],[degreeFrom(?X, ?Y) :- doctoralDegreeFrom(?X, ?Y)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y)., degreeFrom(?X, ?Y) :- hasAlumnus(?Y, ?X)., hasAlumnus(?Y, ?X) :- degreeFrom(?X, ?Y).])
}
(aux_0[2],member[1]) -> {
	([aux_0[2], headOf[2], worksFor[2], memberOf[2], member[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([aux_0[2], headOf[2], worksFor[2], memberOf[2], member[1], memberOf[2], member[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(SystemsStaff[1],Person[1]) -> {
	([SystemsStaff[1], AdministrativeStaff[1], Employee[1], Person[1]],[AdministrativeStaff(?X) :- SystemsStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., Person(?X) :- Employee(?X).])
	([SystemsStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], Person[1]],[AdministrativeStaff(?X) :- SystemsStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([SystemsStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[AdministrativeStaff(?X) :- SystemsStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(teacherOf[1],member[2]) -> {
	([teacherOf[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[FacultyStaff(?X) :- teacherOf(?X, ?Y)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([teacherOf[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[FacultyStaff(?X) :- teacherOf(?X, ?Y)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(ClericalStaff[1],memberOf[1]) -> {
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(aux_3[1],memberOf[1]) -> {
	([aux_3[1], worksFor[1], memberOf[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(Chair[1],worksFor[1]) -> {
	([Chair[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1]],[Professor(?X) :- Chair(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y).])
}
(FacultyStaff[1],memberOf[1]) -> {
	([FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1]],[Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(affiliatedOrganizationOf[1],Organization[1]) -> {
	([affiliatedOrganizationOf[1], Organization[1]],[Organization(?X) :- affiliatedOrganizationOf(?X, ?Y).])
}
(aux_0[1],memberOf[1]) -> {
	([aux_0[1], headOf[1], worksFor[1], memberOf[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([aux_0[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[headOf(?X, ?Y) :- aux_0(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(aux_1[1],memberOf[1]) -> {
	([aux_1[1], headOf[1], worksFor[1], memberOf[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(FacultyStaff[1],Employee[1]) -> {
	([FacultyStaff[1], Employee[1]],[Employee(?X) :- FacultyStaff(?X).])
}
(ClericalStaff[1],Employee[1]) -> {
	([ClericalStaff[1], AdministrativeStaff[1], Employee[1]],[AdministrativeStaff(?X) :- ClericalStaff(?X)., Employee(?X) :- AdministrativeStaff(?X).])
}
(Employee[1],aux_3[1]) -> {
	([Employee[1], aux_3[1]],[aux_3(?X, ?Y) :- Employee(?X).])
}
(member[1],Organization[1]) -> {
	([member[1], Organization[1]],[Organization(?X) :- member(?X, ?Y).])
	([member[1], memberOf[2], member[1], Organization[1]],[memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Organization(?X) :- member(?X, ?Y).])
}
(aux_3[2],memberOf[2]) -> {
	([aux_3[2], worksFor[2], memberOf[2]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([aux_3[2], worksFor[2], memberOf[2], member[1], memberOf[2]],[worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(aux_1[2],memberOf[2]) -> {
	([aux_1[2], headOf[2], worksFor[2], memberOf[2]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y).])
	([aux_1[2], headOf[2], worksFor[2], memberOf[2], member[1], memberOf[2]],[headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y).])
}
(BachelorExam[1],Work[1]) -> {
	([BachelorExam[1], Exam[1], Work[1]],[Exam(?X) :- BachelorExam(?X)., Work(?X) :- Exam(?X).])
}
(hasFaculty[1],University[1]) -> {
	([hasFaculty[1], University[1]],[University(?X) :- hasFaculty(?X, ?Y).])
	([hasFaculty[1], isPartOfUniversity[2], University[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., University(?Y) :- isPartOfUniversity(?X, ?Y).])
	([hasFaculty[1], isPartOfUniversity[2], hasFaculty[1], University[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., University(?X) :- hasFaculty(?X, ?Y).])
	([hasFaculty[1], isPartOfUniversity[2], hasFaculty[1], isPartOfUniversity[2], University[1]],[isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., hasFaculty(?X, ?Y) :- isPartOfUniversity(?Y, ?X)., isPartOfUniversity(?Y, ?X) :- hasFaculty(?X, ?Y)., University(?Y) :- isPartOfUniversity(?X, ?Y).])
}
(advisor[2],Employee[1]) -> {
	([advisor[2], Professor[1], FacultyStaff[1], Employee[1]],[Professor(?Y) :- advisor(?X, ?Y)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(headOf[1],worksFor[1]) -> {
	([headOf[1], worksFor[1]],[worksFor(?X, ?Y) :- headOf(?X, ?Y).])
}
(ExDean[1],member[2]) -> {
	([ExDean[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
	([ExDean[1], Professor[1], FacultyStaff[1], Employee[1], aux_3[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2]],[Professor(?X) :- ExDean(?X)., FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X)., aux_3(?X, ?Y) :- Employee(?X)., worksFor(?X, ?Y) :- aux_3(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X).])
}
(memberOf[1],Person[1]) -> {
	([memberOf[1], member[2], Person[1]],[member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([memberOf[1], member[2], memberOf[1], member[2], Person[1]],[member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(SystemsStaff[1],aux_3[1]) -> {
	([SystemsStaff[1], AdministrativeStaff[1], Employee[1], aux_3[1]],[AdministrativeStaff(?X) :- SystemsStaff(?X)., Employee(?X) :- AdministrativeStaff(?X)., aux_3(?X, ?Y) :- Employee(?X).])
}
(Director[1],Person[1]) -> {
	([Director[1], Person[1]],[Person(?X) :- Director(?X).])
	([Director[1], aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2], Person[1]],[aux_1(?X, ?Y) :- Director(?X)., headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
	([Director[1], aux_1[1], headOf[1], worksFor[1], memberOf[1], member[2], memberOf[1], member[2], Person[1]],[aux_1(?X, ?Y) :- Director(?X)., headOf(?X, ?Y) :- aux_1(?X, ?Y)., worksFor(?X, ?Y) :- headOf(?X, ?Y)., memberOf(?X, ?Y) :- worksFor(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., memberOf(?Y, ?X) :- member(?X, ?Y)., member(?X, ?Y) :- memberOf(?Y, ?X)., Person(?Y) :- member(?X, ?Y).])
}
(Professor[1],Employee[1]) -> {
	([Professor[1], FacultyStaff[1], Employee[1]],[FacultyStaff(?X) :- Professor(?X)., Employee(?X) :- FacultyStaff(?X).])
}
(teachingAssistantOf[2],Work[1]) -> {
	([teachingAssistantOf[2], Course[1], Work[1]],[Course(?Y) :- teachingAssistantOf(?X, ?Y)., Work(?X) :- Course(?X).])
}
Nodes: 86
Edges: 576
Longest Path: 10


2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [DEBUG] Finished rewriting constraints.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q1(?A) :- affiliatedOrganizationOf(?B, ?C), worksFor(?A, ?B).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q1_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q2(?A, ?B) :- Person(?A), Course(?B), teacherOf(?A, ?B).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q2_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q3(?A, ?B, ?C) :- Student(?A), Course(?C), teacherOf(?B, ?C), FacultyStaff(?B), takesCourse(?A, ?C), advisor(?A, ?B).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |6 [5]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [6]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 12 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q3_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q4(?A, ?B) :- Person(?A), Organization(?B), worksFor(?A, ?B).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q4_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q5(?A) :- Person(?A), hasAlumnus(?B, ?A), University(?B), worksFor(?A, ?B).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |11 [7]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |19 [8]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |25 [6]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |25 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 25 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q5_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q6(?X0) :- FacultyStaff(?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |14 [9]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |14 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 14 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q6_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q7(?X0, ?X1) :- member(?X1, ?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q7_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q8(?X0) :- undergraduateDegreeFrom(?X0, ?X1), University(?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q8_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q9(?X0) :- Organization(?X1), undergraduateDegreeFrom(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q9_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q10(?X0) :- University(?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [7]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 8 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q10_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q11(?X0, ?X1) :- hasFaculty(?X1, ?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q11_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q12(?X0) :- takesCourse(?X0, ?X1), Work(?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [7]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |24 [18]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |39 [15]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |41 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |41 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 41 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q12_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q13(?X0) :- isPartOfUniversity(?X0, ?X1), University(?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q13_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q14(?X0) :- headOf(?X0, ?X1), Organization(?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q14_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q15(?X0) :- isPartOfUniversity(?X1, ?X0), Faculty(?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q15_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q16(?X0) :- Organization(?X1), hasFaculty(?X1, ?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q16_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q17(?X0, ?X1) :- degreeFrom(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q17_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q18(?X0) :- Person(?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |14 [13]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |20 [8]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |27 [7]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |38 [11]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |40 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |40 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 40 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q18_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q19(?X0) :- Employee(?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |9 [6]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |18 [9]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |18 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 18 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q19_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q20(?X0) :- degreeFrom(?X1, ?X0), Person(?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q20_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q21(?X0) :- doctoralDegreeFrom(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q21_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q22(?X0, ?X1) :- isPartOfUniversity(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q22_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q23(?X0) :- College(?X1), memberOf(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 15 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q23_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q24(?X0) :- hasAlumnus(?X1, ?X0), Organization(?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q24_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q25(?X0) :- Organization(?X1), memberOf(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |18 [6]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |26 [8]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |26 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 26 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q25_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q26(?X0) :- worksFor(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |6 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |10 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |16 [6]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |24 [8]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |24 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 24 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q26_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q27(?X0) :- Organization(?X1), degreeFrom(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q27_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q28(?X0) :- hasFaculty(?X1, ?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q28_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q29(?X0, ?X1) :- memberOf(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q29_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q30(?X0) :- GraduateCourse(?X1), takesCourse(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q30_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q31(?X0) :- Organization(?X1), doctoralDegreeFrom(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q31_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q32(?X0) :- member(?X1, ?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |18 [6]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |26 [8]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |26 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 26 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q32_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q33(?X0) :- AdministrativeStaff(?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 3 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q33_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q34(?X0) :- memberOf(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [4]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |18 [6]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |26 [8]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |26 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 26 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q34_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q35(?X0) :- Organization(?X1), mastersDegreeFrom(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q35_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q36(?X0) :- Exam(?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q36_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q37(?X0, ?X1) :- worksFor(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q37_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q38(?X0) :- ExamRecord(?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q38_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q39(?X0) :- Organization(?X1), isPartOfUniversity(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q39_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q40(?X0) :- hasFaculty(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q40_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q41(?X0) :- takesCourse(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 8 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q41_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q42(?X0) :- hasAlumnus(?X0, ?X1), Person(?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q42_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q43(?X0, ?X1) :- member(?X0, ?X1).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [2]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q43_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q44(?X0, ?X1) :- hasAlumnus(?X1, ?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [3]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:14 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q44_rew.dtg
2015-05-13 17:56:14 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q45(?X0) :- Organization(?X1), isPartOfUniversity(?X1, ?X0).
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:14 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q45_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q46(?X0) :- hasAlumnus(?X1, ?X0), University(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q46_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q47(?X0, ?X1) :- isPartOfUniversity(?X1, ?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q47_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q48(?X0) :- hasAlumnus(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q48_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q49(?X0) :- member(?X1, ?X0), Organization(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |18 [6]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |26 [8]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |26 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 26 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q49_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q50(?X0) :- Faculty(?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 3 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q50_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q51(?X0) :- Program(?X1), worksFor(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |11 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |11 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 11 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q51_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q52(?X0) :- isPartOfUniversity(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q52_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q53(?X0) :- memberOf(?X1, ?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q53_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q54(?X0) :- Program(?X1), headOf(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q54_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q55(?X0, ?X1) :- degreeFrom(?X1, ?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q55_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q56(?X0) :- doctoralDegreeFrom(?X0, ?X1), University(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q56_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q57(?X0) :- memberOf(?X1, ?X0), Person(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q57_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q58(?X0) :- degreeFrom(?X0, ?X1), University(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q58_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q59(?X0) :- undergraduateDegreeFrom(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q59_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q60(?X0) :- Student(?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 4 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q60_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q61(?X0) :- Professor(?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |10 [9]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |10 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 10 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q61_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q62(?X0) :- Program(?X1), memberOf(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 15 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q62_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q63(?X0) :- isPartOfUniversity(?X1, ?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q63_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q64(?X0) :- degreeFrom(?X1, ?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q64_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q65(?X0) :- Work(?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |6 [5]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [6]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |13 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |13 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 13 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q65_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q66(?X0) :- Program(?X1), member(?X1, ?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 15 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q66_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q67(?X0) :- headOf(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q67_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q68(?X0) :- Course(?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |6 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |6 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 6 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q68_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q69(?X0) :- hasFaculty(?X0, ?X1), Faculty(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q69_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q70(?X0) :- member(?X0, ?X1), Person(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q70_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q71(?X0) :- mastersDegreeFrom(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q71_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q72(?X0) :- Organization(?X1), worksFor(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |6 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |10 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |16 [6]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |24 [8]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |24 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 24 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q72_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q73(?X0) :- member(?X1, ?X0), College(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |12 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |15 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 15 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q73_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q74(?X0) :- hasFaculty(?X1, ?X0), University(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q74_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q75(?X0) :- headOf(?X0, ?X1), College(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q75_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q76(?X0) :- degreeFrom(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q76_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q77(?X0) :- worksFor(?X0, ?X1), College(?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |4 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |8 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |11 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |11 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 11 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q77_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q78(?X0) :- member(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q78_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q79(?X0) :- Organization(?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |11 [10]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |23 [12]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |24 [4]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |25 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |25 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 25 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q79_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q80(?X0, ?X1) :- hasAlumnus(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q80_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q81(?X0) :- University(?X1), mastersDegreeFrom(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |1 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 1 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q81_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q82(?X0, ?X1) :- hasFaculty(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q82_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q83(?X0, ?X1) :- memberOf(?X1, ?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |3 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [2]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 7 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q83_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q84(?X0) :- Organization(?X1), hasFaculty(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 2 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q84_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q85(?X0) :- hasAlumnus(?X1, ?X0).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |2 [1]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [3]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |5 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 5 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q85_rew.dtg
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Processing query: Q86(?X0) :- Course(?X1), takesCourse(?X0, ?X1).
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Reducing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Decomposing query.
2015-05-13 17:56:15 deri.iris.queryrewriting.ParallelRewriter [DEBUG] Rewriting query.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |7 [6]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |17 [11]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |22 [6]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [TRACE] |22 [0]
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] Cleaning auxiliary predicates from 22 queries.
2015-05-13 17:56:15 deri.iris.queryrewriting.LinearRewriter [DEBUG] done.
2015-05-13 17:56:15 deri.iris.queryrewriting.QueryRewritingTest [INFO] Writing the output at: /home/giorsi/Development/workspace/IRIS+-/examples/rewriting_test/output/U/Q86_rew.dtg
